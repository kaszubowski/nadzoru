local list    = {}
local list_MT = { __index = list }

function list.new()
    self = {
        root  = nil,
        itens = 0
    }

    return setmetatable( self, list_MT )
end

function list:add( data, pos )
    pos = pos >=1 and pos < (self.itens+1) and pos or
          (self.itens + pos +1) >= 1 and (self.itens + pos +1) or
          self.itens+1

    local node = {
        data = data,
    }

    local p_atual = nil
    local p_next  = self.root

    while pos > 0 and p_next do
        pos = pos - 1
        p_atual = p_next
        p_next  = p_next.next
    end

    if p_atual then
        node.next    = p_next
        p_atual.next = node
    else
        self.root = node
    end

    self.itens = self.itens + 1
end

function list:get( pos )
    pos = pos >=1 and pos < (self.itens) and pos or
    (self.itens + pos +1) >= 1 and (self.itens + pos +1) > 0 and (self.itens + pos +1) or
    self.itens

    local p_atual = nil
    local p_next  = self.root

    while pos > 0 and p_next do
        pos = pos - 1
        p_atual = p_next
        p_next  = p_next.next
    end

    if p_atual then
        return p_atual.data
    end

end

function list:remove( pos )
    pos = pos >=1 and pos < (self.itens) and pos or self.itens

    local p_prev  = nil
    local p_atual = nil
    local p_next  = self.root

    while pos > 0 and p_next do
        pos = pos - 1
        p_prev  = p_atual
        p_atual = p_next
        p_next  = p_next.next
    end

    if p_atual then
        if p_prev then
            p_prev.next = p_next
        else
            self.root = p_next
        end

        self.itens = self.itens - 1
        return p_atual.data
    end
end

function list:append( data )
    self.add( data, 0) --last position
end

--TEST:
inst = list.new()
inst:add( 'a', 1)
inst:add( 'b', 2)
inst:add( 'c', 3)
inst:add( 'd', 4)
inst:add( 'e', 5)

print(inst:get(1))
print(inst:get(2))
print(inst:get(3))
print(inst:get(4))
print(inst:get(5))
print(inst:get(6))

inst:remove(1)
print(inst:get(1))
print(inst:get(2))
print(inst:get(3))
print(inst:get(4))
print(inst:get(5))

return list
